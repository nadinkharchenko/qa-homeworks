{
	"info": {
		"_postman_id": "6bc13907-6396-4e0e-92f7-0011a64fda27",
		"name": "Domashka6 Kharchenko Nadya",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1. Get token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var resp_json = pm. response.json();",
							"pm.collectionVariables.set(\"asses_token\", resp_json.token);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "login",
							"value": "qwer@mail.com",
							"type": "text"
						},
						{
							"key": "password",
							"value": "qwer",
							"type": "text"
						}
					],
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}login",
					"host": [
						"{{url}}login"
					]
				}
			},
			"response": []
		},
		{
			"name": "2. Second user_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							" var responseJson = pm.response.json();",
							" var requestJson = JSON.parse(request.data);",
							"",
							"var schema = {",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
							"    \"$id\": \"http://example.com/example.json\",",
							"    \"type\": \"object\",",
							"    \"title\": \"The root schema\",",
							"    \"description\": \"The root schema comprises the entire JSON document.\",",
							"    \"default\": {},",
							"    \"examples\": [",
							"        {",
							"            \"person\": {",
							"                \"u_age\": 41,",
							"                \"u_name\": [",
							"                    \"Nadya\",",
							"                    12345,",
							"                    41",
							"                ],",
							"                \"u_salary_1_5_year\": 49380",
							"            },",
							"            \"qa_salary_after_12_months\": 35800.5,",
							"            \"qa_salary_after_6_months\": 24690,",
							"            \"start_qa_salary\": 12345",
							"        }",
							"    ],",
							"    \"required\": [",
							"        \"person\",",
							"        \"qa_salary_after_12_months\",",
							"        \"qa_salary_after_6_months\",",
							"        \"start_qa_salary\"",
							"    ],",
							"    \"properties\": {",
							"        \"person\": {",
							"            \"$id\": \"#/properties/person\",",
							"            \"type\": \"object\",",
							"            \"title\": \"The person schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": {},",
							"            \"examples\": [",
							"                {",
							"                    \"u_age\": 41,",
							"                    \"u_name\": [",
							"                        \"Nadya\",",
							"                        12345,",
							"                        41",
							"                    ],",
							"                    \"u_salary_1_5_year\": 49380",
							"                }",
							"            ],",
							"            \"required\": [",
							"                \"u_age\",",
							"                \"u_name\",",
							"                \"u_salary_1_5_year\"",
							"            ],",
							"            \"properties\": {",
							"                \"u_age\": {",
							"                    \"$id\": \"#/properties/person/properties/u_age\",",
							"                    \"type\": \"integer\",",
							"                    \"title\": \"The u_age schema\",",
							"                    \"description\": \"An explanation about the purpose of this instance.\",",
							"                    \"default\": 0,",
							"                    \"examples\": [",
							"                        41",
							"                    ]",
							"                },",
							"                \"u_name\": {",
							"                    \"$id\": \"#/properties/person/properties/u_name\",",
							"                    \"type\": \"array\",",
							"                    \"title\": \"The u_name schema\",",
							"                    \"description\": \"An explanation about the purpose of this instance.\",",
							"                    \"default\": [],",
							"                    \"examples\": [",
							"                        [",
							"                            \"Nadya\",",
							"                            12345",
							"                        ]",
							"                    ],",
							"                    \"additionalItems\": true,",
							"                    \"items\": {",
							"                        \"$id\": \"#/properties/person/properties/u_name/items\",",
							"                        \"anyOf\": [",
							"                            {",
							"                                \"$id\": \"#/properties/person/properties/u_name/items/anyOf/0\",",
							"                                \"type\": \"string\",",
							"                                \"title\": \"The first anyOf schema\",",
							"                                \"description\": \"An explanation about the purpose of this instance.\",",
							"                                \"default\": \"\",",
							"                                \"examples\": [",
							"                                    \"Nadya\"",
							"                                ]",
							"                            },",
							"                            {",
							"                                \"$id\": \"#/properties/person/properties/u_name/items/anyOf/1\",",
							"                                \"type\": \"integer\",",
							"                                \"title\": \"The second anyOf schema\",",
							"                                \"description\": \"An explanation about the purpose of this instance.\",",
							"                                \"default\": 0,",
							"                                \"examples\": [",
							"                                    12345,",
							"                                    41",
							"                                ]",
							"                            }",
							"                        ]",
							"                    }",
							"                },",
							"                \"u_salary_1_5_year\": {",
							"                    \"$id\": \"#/properties/person/properties/u_salary_1_5_year\",",
							"                    \"type\": \"integer\",",
							"                    \"title\": \"The u_salary_1_5_year schema\",",
							"                    \"description\": \"An explanation about the purpose of this instance.\",",
							"                    \"default\": 0,",
							"                    \"examples\": [",
							"                        49380",
							"                    ]",
							"                }",
							"            },",
							"            \"additionalProperties\": true",
							"        },",
							"        \"qa_salary_after_12_months\": {",
							"            \"$id\": \"#/properties/qa_salary_after_12_months\",",
							"            \"type\": \"number\",",
							"            \"title\": \"The qa_salary_after_12_months schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0.0,",
							"            \"examples\": [",
							"                35800.5",
							"            ]",
							"        },",
							"        \"qa_salary_after_6_months\": {",
							"            \"$id\": \"#/properties/qa_salary_after_6_months\",",
							"            \"type\": \"integer\",",
							"            \"title\": \"The qa_salary_after_6_months schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0,",
							"            \"examples\": [",
							"                24690",
							"            ]",
							"        },",
							"        \"start_qa_salary\": {",
							"            \"$id\": \"#/properties/start_qa_salary\",",
							"            \"type\": \"integer\",",
							"            \"title\": \"The start_qa_salary schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0,",
							"            \"examples\": [",
							"                12345",
							"            ]",
							"        }",
							"    },",
							"    \"additionalProperties\": true",
							"};",
							"",
							"pm.test('Verify if schema is valid', function () {",
							"   pm.response.to.have.jsonSchema(schema)",
							"});",
							"",
							"",
							"console.log(JSON.parse(request.data))",
							"",
							"",
							"pm.test(\"Check if work coefficient correct\",function(){",
							" var requestJson = JSON.parse(request.data);",
							"    pm.expect(responseJson.start_qa_salary).to.eq(requestJson.salary);",
							"});",
							"",
							"",
							"pm.test(\"Check if 'qa_salary_after_6_months' = 'salary * 2'\", function(){",
							"     pm.expect(responseJson.qa_salary_after_6_months).to.eq(requestJson.salary * 2);",
							"});",
							"",
							"",
							"pm.test(\"Check if 'qa_salary_after_12_months' = 'salary * 2.9'\", function(){",
							"     pm.expect(responseJson.qa_salary_after_12_months).to.eq(requestJson.salary * 2.9);",
							"});",
							"",
							"",
							"pm.test(\"Check if 'u_salary_1_5_year' = 'salary * 4'\", function(){",
							"     pm.expect(responseJson.person.u_salary_1_5_year).to.eq(requestJson.salary * 4);",
							"});",
							"",
							"",
							"pm.collectionVariables.set(\"u_salary_1_5_year\", responseJson.person.u_salary_1_5_year);",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"age\":41,\n    \"name\":\"Nadya\",\n    \"salary\":12345,\n    \"auth_token\":\"{{asses_token}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}user_info",
					"host": [
						"{{url}}user_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "3. Third new_data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"console.log(request.data)",
							"var responseJson = pm.response.json();",
							"var requestJson = request.data;",
							"",
							"pm.test (\"Check 'responce salary [0]' = 'salary * coefficient'\", function(){",
							"    pm.expect(responseJson.salary[0]).to.eq(+(requestJson.salary));",
							"})",
							"",
							"",
							"pm.test (\"Check 'responce salary [1]' = 'salary * coefficient'\", function(){",
							"    pm.expect(+(responseJson.salary[1])).to.eq(requestJson.salary * 2);",
							"})",
							"",
							"//проверить, что 2-й элемент массива salary больше 1-го и 0-го",
							"pm.test(\"Check 'salary[2] > salary[0] and [1]'\", function(){",
							"     pm.expect(+(responseJson.salary[2])).to.greaterThan(responseJson.salary[0]);",
							"     pm.expect(+(responseJson.salary[2])).to.greaterThan(+(responseJson.salary[1]));",
							"});",
							"",
							"",
							"pm.test (\"Check 'responce salary [2]' = 'salary * coefficient'\", function(){",
							"    pm.expect(+(responseJson.salary[2])).to.eq(requestJson.salary * 3);",
							"})",
							"console.log( responseJson.salary[2]);",
							"var a = responseJson.salary[0];",
							"var b =responseJson.salary[1];",
							"var c = responseJson.salary[2];",
							"//pm.test(\"Check 'salary[2]' > 'salary [1]'\")  c > a == true; "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "41",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Nadya",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{asses_token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}new_data",
					"host": [
						"{{url}}new_data"
					]
				}
			},
			"response": []
		},
		{
			"name": "4. Forth test_pet_info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var responseJson = pm.response.json();",
							"var requestJson = request.data;",
							"",
							"pm.test(\"Check if 'response daily food' = 'request weight * 0.012'\", function(){",
							"    pm.expect(responseJson.daily_food).to.eq(requestJson.weight * 0.012);",
							"})",
							"",
							"console.log(requestJson.weight * 2.5)",
							"pm.test(\"Check if 'response daily_sleep' = 'request weight * 2.5'\", function(){",
							"    pm.expect(responseJson.daily_sleep).to.eq(requestJson.weight * 2.5);",
							"});",
							"",
							"var schema = {",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",",
							"    \"$id\": \"http://example.com/example.json\",",
							"    \"type\": \"object\",",
							"    \"title\": \"The root schema\",",
							"    \"description\": \"The root schema comprises the entire JSON document.\",",
							"    \"default\": {},",
							"    \"examples\": [",
							"        {",
							"            \"age\": 41,",
							"            \"daily_food\": 0.66,",
							"            \"daily_sleep\": 137.5,",
							"            \"name\": \"Nadya\"",
							"        }",
							"    ],",
							"    \"required\": [",
							"        \"age\",",
							"        \"daily_food\",",
							"        \"daily_sleep\",",
							"        \"name\"",
							"    ],",
							"    \"properties\": {",
							"        \"age\": {",
							"            \"$id\": \"#/properties/age\",",
							"            \"type\": \"integer\",",
							"            \"title\": \"The age schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0,",
							"            \"examples\": [",
							"                41",
							"            ]",
							"        },",
							"        \"daily_food\": {",
							"            \"$id\": \"#/properties/daily_food\",",
							"            \"type\": \"number\",",
							"            \"title\": \"The daily_food schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0.0,",
							"            \"examples\": [",
							"                0.66",
							"            ]",
							"        },",
							"        \"daily_sleep\": {",
							"            \"$id\": \"#/properties/daily_sleep\",",
							"            \"type\": \"number\",",
							"            \"title\": \"The daily_sleep schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": 0.0,",
							"            \"examples\": [",
							"                137.5",
							"            ]",
							"        },",
							"        \"name\": {",
							"            \"$id\": \"#/properties/name\",",
							"            \"type\": \"string\",",
							"            \"title\": \"The name schema\",",
							"            \"description\": \"An explanation about the purpose of this instance.\",",
							"            \"default\": \"\",",
							"            \"examples\": [",
							"                \"Nadya\"",
							"            ]",
							"        }",
							"    },",
							"    \"additionalProperties\": true",
							"}",
							"",
							"",
							"pm.test('Verify if schema is valid', function () {",
							"   pm.response.to.have.jsonSchema(schema)",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "41",
							"type": "text"
						},
						{
							"key": "weight",
							"value": "55",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Nadya",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{asses_token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}test_pet_info",
					"host": [
						"{{url}}test_pet_info"
					]
				}
			},
			"response": []
		},
		{
			"name": "5. Fifth get_test_user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var responseJson = pm.response.json();",
							"var requestJson = request.data;",
							"",
							"pm.environment.set(\"name\", responseJson.name);",
							"pm.environment.set(\"age\", responseJson.age);",
							"pm.environment.set(\"salary\", responseJson.salary);",
							"pm.test(\"Check 'value name' = 'enviroment name'\", function(){",
							"  console.log(environment)",
							"    pm.expect(requestJson.name).to.eq(environment.name);",
							"});",
							"",
							"pm.test(\"Check 'response age' = 'request age'\", function(){",
							"    pm.expect(responseJson.age).to.eq(requestJson.age);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "41",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Nadya",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "{{asses_token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}get_test_user",
					"host": [
						"{{url}}get_test_user"
					]
				}
			},
			"response": []
		},
		{
			"name": "6. Six currency",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{asses_token}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}currency",
					"host": [
						"{{url}}currency"
					]
				}
			},
			"response": []
		},
		{
			"name": "7. Seven curr_byn",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {",
							"    console.log(response.json());",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "auth_token",
							"value": "{{asses_token}}",
							"type": "text"
						},
						{
							"key": "curr_code",
							"value": "",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}curr_byn",
					"host": [
						"{{url}}curr_byn"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "asses_token",
			"value": ""
		},
		{
			"key": "u_salary_1_5_year",
			"value": ""
		}
	]
}